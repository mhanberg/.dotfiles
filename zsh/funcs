#!/usr/bin/env zsh

g() {
  if [[ $# > 0 ]]; then
    git $@
  else
    git status
  fi
}
compdef g=git

ga() { git add "$@"; }
gc() { git commit "$@"; }
gco() { git checkout $(gbl | fzf); }
gcb() { git checkout -b "$@"; }
gdb() {
	REMOTE=${1:-origin}
	git remote show $REMOTE | grep "HEAD branch" | sed 's/.*: //'
}
gcm() {
  git checkout $(gdb $1)
}
gl() { git log --graph "$@"; }
gpull() { git pull "$@"; }
gpush() { git push "$@"; }
alias gpu="git push -u origin"
gd() { git diff "$@"; }
gs() { git status "$@"; }
gwip() {
  git add .
  git commit -m "WIP" "$@"
}
netlines() {
  git --no-pager diff --numstat $1 | \
  awk '{sum += ($1 - $2)} END{print sum;}'
}
pull-with-changes() {
  gwip
  git pull -r
  unwrap-last-commit
}
path() {
  echo $PATH | tr ':' '\n'
}

execute-fzf() {
  if [ -z "$1" ]; then
    file="$(fzf --multi)"
  else
    file=$(eval "$1 | fzf --multi")
  fi

  case "$file" in
    "") echo "fzf cancelled";;
    *) eval "$2" "$file";;
  esac
}

fv() {
  execute-fzf "" "vim"
}

fmv() {
  execute-fzf "" "mvim"
}

brew-uninstall() {
  execute-fzf "brew list" "brew uninstall"
}
alias bun='brew-uninstall'

brew-cask-uninstall() {
  execute-fzf "brew cask list" "brew cask uninstall"
}
alias bcun='brew-cask-uninstall'

aliases() {
  if [ -f ~/.zsh/aliases ]; then
    cat ~/.zsh/aliases
  fi

  if [ -f ~/.zsh/aliases.local ]; then
    cat ~/.zsh/aliases.local
  fi
}

funcs() {
  if [ -f ~/.zsh/funcs ]; then
    cat ~/.zsh/funcs
  fi

  if [ -f ~/.zsh/funcs.local ]; then
    cat ~/.zsh/funcs.local
  fi
}

rr() {
  case "$#" in
    0) bin/rails routes;;
    *) bin/rails routes | ag "$@";;
  esac
}

pr() {
  case "$#" in
    0) mix phx.routes;;
    *) mix phx.routes | ag "$@";;
  esac
}

brew-outdated() {
  echo "==> Running brew update..."
  brew update >/dev/null

  echo "\n==> Outdated brews and casks"
  brew outdated
}

brew-upgrade() {
  echo "\n==> brew upgrade"
  brew upgrade
}

alias bo="brew-outdated"
alias bu="brew-upgrade"

gg() {
  if [ -d .git ]; then
    if [ $(ls .git | wc -l) -gt '0' ]; then
      smerge .
    else
      (cd .. && gg)
    fi
  else
    (cd .. && gg)
  fi
}

tp() {
  session="$(tmux ls | fzf --reverse | awk '{ print $1 }' | sed 's/://g')"

  if [ -n "$session" ] && tmux attach -t "$session"
}

dev() {
  if [ -z "$1" ]; then
    cd ~/Development
  else
    if [ -d ~/Development/"$1" ]; then
      mux start --suppress-tmux-version-warning=0 code "$1"
    else
      echo "~/Development/$1 does not exist"
    fi
  fi
}

_dev() { _arguments "1: :($(ls $HOME/Development))" }

compdef _dev dev

mixx() {
  mix $(mix help --names | fzf --delimiter=' ' --preview 'mix help {}' --reverse)
}

t() {
  one-thing "游리In Progress游리"

  mix test $@

  case $? in
    0)
      one-thing "游릭Success游릭"
      ;;
    *)
      one-thing  "游댮Fail游댮"
      ;;
  esac
}
