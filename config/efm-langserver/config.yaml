version: 2
log-level: 1

tools:
  eslint: &eslint
    lint-command: './node_modules/.bin/eslint -f unix --stdin'
    lint-ignore-exit-code: true
    lint-stdin: true

  mix_credo: &mix_credo
    lint-command: "MIX_ENV=test mix credo suggest --format=flycheck --read-from-stdin ${INPUT}"
    lint-stdin: true
    lint-formats:
      - '%f:%l:%c: %t: %m'
      - '%f:%l: %t: %m'
    lint-category-map:
      R: N
      D: I
      F: E
      W: W
    root-markers:
      - mix.lock
      - mix.exs

  prettier: &prettier
    format-command: './node_modules/.bin/prettier'

  stylua: &stylua
    format-command: 'stylua -'
    format-stdin: true

  pg_format: &pg_format
    format-command: 'pg_format -'
    format-stdin: true

  shellcheck: &shellcheck
    lint-command: 'shellcheck -f gcc -x -'
    lint-stdin: true
    lint-formats:
      - '%f:%l:%c: %trror: %m'
      - '%f:%l:%c: %tarning: %m'
      - '%f:%l:%c: %tote: %m'

  shfmt: &shfmt
    format-command: 'shfmt -ci -s -bn -i 2'
    format-stdin: true

languages:
  javascript:
    - <<: *eslint
    - <<: *prettier
  typescript:
    - <<: *eslint
    - <<: *prettier
  javascriptreact:
    - <<: *eslint
    - <<: *prettier
  typescriptreact:
    - <<: *eslint
    - <<: *prettier
  yaml:
    - <<: *prettier
  json:
    - <<: *prettier
  html:
    - <<: *prettier
  liquid:
    - <<: *prettier
  scss:
    - <<: *prettier
  css:
    - <<: *prettier
  markdown:
    - <<: *prettier
  lua:
    - <<: *stylua
  sh:
    - <<: *shellcheck
    - <<: *shfmt
  zsh:
    - <<: *shfmt
  elixir:
    - <<: *mix_credo
  sql:
    - <<: *pg_format
